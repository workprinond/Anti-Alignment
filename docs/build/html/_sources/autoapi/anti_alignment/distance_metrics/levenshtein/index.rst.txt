:mod:`anti_alignment.distance_metrics.levenshtein`
==================================================

.. py:module:: anti_alignment.distance_metrics.levenshtein


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   anti_alignment.distance_metrics.levenshtein.levenshtein


.. function:: levenshtein(a, b)

   counts how many replacements, deletions and insertions of symbols between two strings.

   Levenshtein’s distance (or edit distance) which In our case its needed to obtain γ projected to labeled
   transitions starting from σ. calculating (replace/add/delete) at the same cost of 1.
   for instance the word 'ababababab' and 'bababababa' are at distance 2 from each other.
   on the other hand if it was hamming distance it would be at distance 10 for the same example.
   further use the output, will be divided by the length of the greatest(len(γ), len(σ))

   :param str a: trace or anti-alignment you want to compare as a list of strings
   :param str  b: trace or anti-alignment you want to compare a to, also as a list of strings
   :return: returns distance between the provided lists, cost 1 for each operation (replace/add/delete)
   :rtype: int


